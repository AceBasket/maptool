/*
 * This software Copyright by the RPTools.net development team, and
 * licensed under the Affero GPL Version 3 or, at your option, any later
 * version.
 *
 * MapTool Source Code is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public
 * License * along with this source Code.  If not, please visit
 * <http://www.gnu.org/licenses/> and specifically the Affero license
 * text at <http://www.gnu.org/licenses/agpl.html>.
 */
package net.rptools.maptool.client.tool.gridtool;

import com.intellij.uiDesigner.core.Spacer;
import com.jeta.forms.components.colors.JETAColorWell;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import java.awt.*;
import javax.swing.*;

public class AdjustGridControlPanelView {
  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    final JPanel panel1 = new JPanel();
    panel1.setLayout(
        new FormLayout(
            "fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:21dlu:noGrow,fill:d:noGrow",
            "center:d:noGrow,center:d:noGrow,center:d:noGrow,center:4dlu:noGrow,center:d:noGrow,center:4dlu:noGrow,center:d:noGrow,center:11dlu:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:4dlu:noGrow,center:d:noGrow,center:4dlu:noGrow"));
    final JLabel label1 = new JLabel();
    label1.setText("GridControlPanel.size");
    CellConstraints cc = new CellConstraints();
    panel1.add(label1, cc.xy(2, 2));
    final JLabel label2 = new JLabel();
    label2.setText("GridControlPanel.offset.x");
    panel1.add(label2, cc.xy(2, 5));
    final JLabel label3 = new JLabel();
    label3.setText("GridControlPanel.offset.y");
    panel1.add(label3, cc.xy(2, 7));
    final JTextField textField1 = new JTextField();
    textField1.setColumns(6);
    textField1.setName("offsetX");
    textField1.setText("");
    panel1.add(textField1, cc.xyw(4, 5, 2));
    final JTextField textField2 = new JTextField();
    textField2.setColumns(6);
    textField2.setName("offsetY");
    textField2.setText("");
    panel1.add(textField2, cc.xyw(4, 7, 2));
    final JLabel label4 = new JLabel();
    label4.setText("GridControlPanel.color");
    panel1.add(label4, cc.xy(2, 9));
    final JETAColorWell jETAColorWell1 = new JETAColorWell();
    Font jETAColorWell1Font = UIManager.getFont("Panel.font");
    if (jETAColorWell1Font != null) jETAColorWell1.setFont(jETAColorWell1Font);
    jETAColorWell1.setName("colorWell");
    panel1.add(jETAColorWell1, cc.xy(4, 9));
    final JSlider slider1 = new JSlider();
    slider1.setMajorTickSpacing(20);
    slider1.setName("zoomSlider");
    panel1.add(slider1, cc.xyw(2, 11, 4));
    final JSpinner spinner1 = new JSpinner();
    spinner1.setName("gridSize");
    panel1.add(spinner1, cc.xyw(4, 2, 2));
    final JButton button1 = new JButton();
    button1.setActionCommand("Close");
    button1.setName("closeButton");
    button1.setText("Button.close");
    panel1.add(button1, cc.xyw(2, 13, 4));
    final JLabel label5 = new JLabel();
    label5.setHorizontalAlignment(4);
    label5.setName("gridSecondDimensionLabel");
    label5.setText("GridControlPanel.size.second");
    panel1.add(label5, cc.xyw(2, 3, 2));
    final JTextField textField3 = new JTextField();
    textField3.setColumns(6);
    textField3.setName("gridSecondDimension");
    textField3.setText("");
    panel1.add(textField3, cc.xyw(4, 3, 2));
    final Spacer spacer1 = new Spacer();
    panel1.add(spacer1, cc.xy(1, 1));
    final Spacer spacer2 = new Spacer();
    panel1.add(spacer2, cc.xy(2, 1));
    final Spacer spacer3 = new Spacer();
    panel1.add(spacer3, cc.xy(3, 1));
    final Spacer spacer4 = new Spacer();
    panel1.add(spacer4, cc.xy(4, 1));
    final Spacer spacer5 = new Spacer();
    panel1.add(spacer5, cc.xy(5, 1));
    final Spacer spacer6 = new Spacer();
    panel1.add(spacer6, cc.xy(6, 1));
    final Spacer spacer7 = new Spacer();
    panel1.add(spacer7, cc.xy(1, 2));
    final Spacer spacer8 = new Spacer();
    panel1.add(spacer8, cc.xy(1, 3));
    final Spacer spacer9 = new Spacer();
    panel1.add(spacer9, cc.xy(1, 4));
    final Spacer spacer10 = new Spacer();
    panel1.add(spacer10, cc.xy(1, 5));
    final Spacer spacer11 = new Spacer();
    panel1.add(spacer11, cc.xy(1, 6));
    final Spacer spacer12 = new Spacer();
    panel1.add(spacer12, cc.xy(1, 7));
    final Spacer spacer13 = new Spacer();
    panel1.add(spacer13, cc.xy(1, 8));
    final Spacer spacer14 = new Spacer();
    panel1.add(spacer14, cc.xy(1, 9));
    final Spacer spacer15 = new Spacer();
    panel1.add(spacer15, cc.xy(1, 10));
    final Spacer spacer16 = new Spacer();
    panel1.add(spacer16, cc.xy(1, 11));
    final Spacer spacer17 = new Spacer();
    panel1.add(spacer17, cc.xy(1, 12));
    final Spacer spacer18 = new Spacer();
    panel1.add(spacer18, cc.xy(1, 13));
    final Spacer spacer19 = new Spacer();
    panel1.add(spacer19, cc.xy(1, 14));
  }
}
