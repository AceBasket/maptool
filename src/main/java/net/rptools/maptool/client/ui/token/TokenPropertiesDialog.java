package net.rptools.maptool.client.ui.token;

import com.intellij.uiDesigner.core.Spacer;
import com.jeta.forms.components.colors.JETAColorWell;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.lang.reflect.Method;
import java.util.Locale;
import java.util.ResourceBundle;

public class TokenPropertiesDialog {


    private JPanel mainPanel;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:8dlu:noGrow,fill:d:noGrow,fill:6dlu:noGrow,fill:d:grow,fill:8dlu:noGrow", "center:d:noGrow,center:d:noGrow,fill:d:grow,center:28px:grow"));
        mainPanel.setName("mainPanel");
        final JLabel label1 = new JLabel();
        label1.setName("tokenImage");
        label1.setText("Label.image");
        CellConstraints cc = new CellConstraints();
        mainPanel.add(label1, cc.xy(2, 2));
        final JTabbedPane tabbedPane1 = new JTabbedPane();
        tabbedPane1.setName("TabPane");
        tabbedPane1.setVisible(false);
        mainPanel.add(tabbedPane1, cc.xyw(2, 3, 3));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:2px:noGrow,center:d:noGrow,center:d:grow,center:2px:noGrow"));
        panel1.setName("notesPanel");
        panel1.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.notes", panel1);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, cc.xy(2, 3, CellConstraints.FILL, CellConstraints.FILL));
        final JTextArea textArea1 = new JTextArea();
        textArea1.setLineWrap(true);
        textArea1.setName("@notes");
        textArea1.setSelectionEnd(1);
        textArea1.setSelectionStart(1);
        textArea1.setText("\t");
        textArea1.setWrapStyleWord(true);
        scrollPane1.setViewportView(textArea1);
        final JLabel label2 = new JLabel();
        label2.setText("EditTokenDialog.tab.notes");
        panel1.add(label2, cc.xy(2, 2));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, cc.xy(1, 1));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, cc.xy(2, 1));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, cc.xy(3, 1));
        final Spacer spacer4 = new Spacer();
        panel1.add(spacer4, cc.xy(1, 2));
        final Spacer spacer5 = new Spacer();
        panel1.add(spacer5, cc.xy(1, 3));
        final Spacer spacer6 = new Spacer();
        panel1.add(spacer6, cc.xy(1, 4));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:3px:noGrow,center:d:noGrow,fill:d:grow,center:2px:noGrow"));
        panel2.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.label.gmnotes", panel2);
        final JLabel label3 = new JLabel();
        label3.setText("EditTokenDialog.label.gmnotes");
        panel2.add(label3, cc.xy(2, 2));
        final JScrollPane scrollPane2 = new JScrollPane();
        panel2.add(scrollPane2, cc.xy(2, 3));
        final JTextArea textArea2 = new JTextArea();
        textArea2.setLineWrap(true);
        textArea2.setName("@GMNotes");
        textArea2.setText("");
        textArea2.setWrapStyleWord(true);
        scrollPane2.setViewportView(textArea2);
        final Spacer spacer7 = new Spacer();
        panel2.add(spacer7, cc.xy(1, 1));
        final Spacer spacer8 = new Spacer();
        panel2.add(spacer8, cc.xy(2, 1));
        final Spacer spacer9 = new Spacer();
        panel2.add(spacer9, cc.xy(3, 1));
        final Spacer spacer10 = new Spacer();
        panel2.add(spacer10, cc.xy(1, 2));
        final Spacer spacer11 = new Spacer();
        panel2.add(spacer11, cc.xy(1, 3));
        final Spacer spacer12 = new Spacer();
        panel2.add(spacer12, cc.xy(1, 4));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:3px:noGrow,fill:d:grow,center:2px:noGrow"));
        panel3.setName("propertiesPanel");
        panel3.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.properties", panel3);
        final JLabel label4 = new JLabel();
        label4.setName("propertiesTable");
        label4.setText("propertiesTable");
        panel3.add(label4, cc.xyw(2, 2, 2));
        final Spacer spacer13 = new Spacer();
        panel3.add(spacer13, cc.xy(1, 1));
        final Spacer spacer14 = new Spacer();
        panel3.add(spacer14, cc.xy(2, 1));
        final Spacer spacer15 = new Spacer();
        panel3.add(spacer15, cc.xy(3, 1));
        final Spacer spacer16 = new Spacer();
        panel3.add(spacer16, cc.xy(4, 1));
        final Spacer spacer17 = new Spacer();
        panel3.add(spacer17, cc.xy(1, 2));
        final Spacer spacer18 = new Spacer();
        panel3.add(spacer18, cc.xy(1, 3));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FormLayout("fill:d:noGrow,left:d:noGrow,fill:4dlu:noGrow,fill:d:noGrow,fill:20dlu:noGrow,fill:d:noGrow,fill:32dlu:noGrow,fill:d:noGrow,fill:d:grow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow", "center:1dlu:noGrow,center:2px:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:39px:noGrow,center:2dlu:noGrow,center:d:noGrow,center:2dlu:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2dlu:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,center:26px:noGrow,center:2px:noGrow,center:26px:noGrow,center:2px:noGrow,center:25px:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,fill:d:noGrow,center:3px:noGrow,fill:d:noGrow"));
        panel4.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.vbl", panel4);
        final JCheckBox checkBox1 = new JCheckBox();
        checkBox1.setActionCommand("Always Show\t");
        checkBox1.setHorizontalAlignment(0);
        checkBox1.setName("copyOrMoveCheckbox");
        checkBox1.setSelected(true);
        checkBox1.setText("EditTokenDialog.option.vbl.erase");
        checkBox1.setToolTipText("EditTokenDialog.option.vbl.erase.tooltip");
        panel4.add(checkBox1, cc.xyw(2, 24, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JCheckBox checkBox2 = new JCheckBox();
        checkBox2.setActionCommand("Hide Preview");
        checkBox2.setName("inverseVblCheckbox");
        checkBox2.setText("EditTokenDialog.label.vbl.invert");
        checkBox2.setToolTipText("EditTokenDialog.label.vbl.invert.tooltip");
        panel4.add(checkBox2, cc.xyw(2, 10, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label5 = new JLabel();
        label5.setHorizontalAlignment(2);
        label5.setName("ignoreColorLabel");
        label5.setText("EditTokenDialog.label.vbl.color");
        panel4.add(label5, cc.xy(2, 6));
        final JETAColorWell jETAColorWell1 = new JETAColorWell();
        Font jETAColorWell1Font = UIManager.getFont("Panel.font");
        if (jETAColorWell1Font != null) jETAColorWell1.setFont(jETAColorWell1Font);
        jETAColorWell1.setName("vblIgnoreColorWell");
        jETAColorWell1.setToolTipText("EditTokenDialog.label.vbl.well");
        panel4.add(jETAColorWell1, cc.xyw(5, 6, 2, CellConstraints.CENTER, CellConstraints.CENTER));
        final JToggleButton toggleButton1 = new JToggleButton();
        toggleButton1.setName("vblColorPickerToggleButton");
        toggleButton1.setText("");
        toggleButton1.setToolTipText("EditTokenDialog.label.vbl.toggle");
        panel4.add(toggleButton1, cc.xy(7, 6));
        final JLabel label6 = new JLabel();
        label6.setHorizontalAlignment(2);
        label6.setName("alphaSensitivityLabel");
        label6.setText("EditTokenDialog.label.vbl.sensitivity");
        panel4.add(label6, cc.xyw(2, 8, 2));
        final JLabel label7 = new JLabel();
        label7.setHorizontalAlignment(2);
        label7.setText("EditTokenDialog.label.vbl.tolerance");
        panel4.add(label7, cc.xyw(2, 30, 4));
        final JCheckBox checkBox3 = new JCheckBox();
        checkBox3.setActionCommand("Always Show\t");
        checkBox3.setHorizontalAlignment(0);
        checkBox3.setName("alwaysVisibleButton");
        checkBox3.setSelected(true);
        checkBox3.setText("EditTokenDialog.label.vbl.over");
        checkBox3.setToolTipText("EditTokenDialog.label.vbl.over.tooltip");
        panel4.add(checkBox3, cc.xyw(2, 28, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setName("visibilityLabel");
        label8.setText("EditTokenDialog.label.vbl.visiblity");
        panel4.add(label8, cc.xyw(2, 26, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label9 = new JLabel();
        label9.setHorizontalAlignment(2);
        label9.setName("jtsDistanceToleranceLabel");
        label9.setText("EditTokenDialog.label.vbl.level");
        panel4.add(label9, cc.xy(2, 14));
        final JLabel label10 = new JLabel();
        label10.setHorizontalAlignment(2);
        label10.setName("jtsDistanceToleranceLabel");
        label10.setText("EditTokenDialog.label.vbl.method");
        panel4.add(label10, cc.xy(2, 16));
        final JLabel label11 = new JLabel();
        Font label11Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, label11.getFont());
        if (label11Font != null) label11.setFont(label11Font);
        label11.setName("optimizationLabel");
        label11.setText("EditTokenDialog.label.vbl.optimize");
        panel4.add(label11, cc.xyw(2, 12, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JSpinner spinner1 = new JSpinner();
        spinner1.setName("visibilityToleranceSpinner");
        spinner1.setToolTipText("EditTokenDialog.vbl.explanation.tooltip");
        panel4.add(spinner1, cc.xy(7, 30));
        final JComboBox comboBox1 = new JComboBox();
        comboBox1.setActionCommand("comboBoxChanged");
        comboBox1.setName("jtsMethodComboBox");
        comboBox1.setToolTipText("EditTokenDialog.drop.vbl.optimize.tooltip");
        panel4.add(comboBox1, cc.xyw(3, 16, 5));
        final JSpinner spinner2 = new JSpinner();
        spinner2.setName("alphaSensitivitySpinner");
        spinner2.setToolTipText("EditTokenDialog.label.vbl.sensitivity.tooltip");
        panel4.add(spinner2, cc.xy(7, 8));
        final JSpinner spinner3 = new JSpinner();
        spinner3.setName("jtsDistanceToleranceSpinner");
        spinner3.setToolTipText("EditTokenDialog.spinner.tolerance.tooltip");
        panel4.add(spinner3, cc.xy(7, 14));
        final JCheckBox checkBox4 = new JCheckBox();
        checkBox4.setActionCommand("Hide Preview");
        checkBox4.setName("hideTokenCheckbox");
        checkBox4.setText("EditTokenDialog.label.vbl.preview");
        checkBox4.setToolTipText("EditTokenDialog.label.vbl.preview.tooltip");
        panel4.add(checkBox4, cc.xyw(2, 4, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JButton button1 = new JButton();
        button1.setActionCommand("Clear VBL");
        button1.setName("clearVblButton");
        button1.setText("EditTokenDialog.button.vbl.clear");
        button1.setToolTipText("EditTokenDialog.button.vbl.clear.tooltip");
        panel4.add(button1, cc.xyw(2, 18, 6));
        final JButton button2 = new JButton();
        button2.setActionCommand("Generate VBL\t");
        button2.setName("autoGenerateVblButton");
        button2.setText("EditTokenDialog.button.vbl");
        button2.setToolTipText("EditTokenDialog.button.vbl.tooltip");
        panel4.add(button2, cc.xyw(2, 5, 6));
        final JButton button3 = new JButton();
        button3.setActionCommand("Clear VBL");
        button3.setName("transferVblToMap");
        button3.setText("EditTokenDialog.button.vbl.tomap");
        panel4.add(button3, cc.xyw(2, 20, 6));
        final JButton button4 = new JButton();
        button4.setActionCommand("Clear VBL");
        button4.setName("transferVblFromMap");
        button4.setText("EditTokenDialog.button.vbl.frommap");
        panel4.add(button4, cc.xyw(2, 22, 6));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow", "center:d:noGrow"));
        panel4.add(panel5, cc.xyw(2, 3, 6));
        final JToggleButton toggleButton2 = new JToggleButton();
        toggleButton2.setName("wallVblToggle");
        toggleButton2.setText("");
        panel5.add(toggleButton2, cc.xy(1, 1));
        final JToggleButton toggleButton3 = new JToggleButton();
        toggleButton3.setName("hillVblToggle");
        toggleButton3.setText("");
        panel5.add(toggleButton3, cc.xy(2, 1));
        final JToggleButton toggleButton4 = new JToggleButton();
        toggleButton4.setName("pitVblToggle");
        toggleButton4.setText("");
        panel5.add(toggleButton4, cc.xy(3, 1));
        final JToggleButton toggleButton5 = new JToggleButton();
        toggleButton5.setName("mblToggle");
        toggleButton5.setText("");
        panel5.add(toggleButton5, cc.xy(4, 1));
        final Spacer spacer19 = new Spacer();
        panel5.add(spacer19, cc.xy(5, 1));
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FormLayout("fill:d:grow", "fill:d:grow"));
        panel6.setName("vblPreviewPanel");
        panel4.add(panel6, cc.xywh(9, 2, 4, 29));
        panel6.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "EditTokenDialog.border.title.vbl.preview", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel6.getFont()), new Color(-13538620)));
        final JLabel label12 = new JLabel();
        label12.setName("vblPreview");
        label12.setText("EditTokenDialog.button.vbl.preview");
        panel6.add(label12, cc.xy(1, 1));
        final Spacer spacer20 = new Spacer();
        panel4.add(spacer20, cc.xy(1, 1));
        final Spacer spacer21 = new Spacer();
        panel4.add(spacer21, cc.xy(2, 1));
        final Spacer spacer22 = new Spacer();
        panel4.add(spacer22, cc.xy(3, 1));
        final Spacer spacer23 = new Spacer();
        panel4.add(spacer23, cc.xy(4, 1));
        final Spacer spacer24 = new Spacer();
        panel4.add(spacer24, cc.xy(5, 1));
        final Spacer spacer25 = new Spacer();
        panel4.add(spacer25, cc.xy(6, 1));
        final Spacer spacer26 = new Spacer();
        panel4.add(spacer26, cc.xy(7, 1));
        final Spacer spacer27 = new Spacer();
        panel4.add(spacer27, cc.xy(8, 1));
        final Spacer spacer28 = new Spacer();
        panel4.add(spacer28, cc.xy(9, 1));
        final Spacer spacer29 = new Spacer();
        panel4.add(spacer29, cc.xy(10, 1));
        final Spacer spacer30 = new Spacer();
        panel4.add(spacer30, cc.xy(11, 1));
        final Spacer spacer31 = new Spacer();
        panel4.add(spacer31, cc.xy(12, 1));
        final Spacer spacer32 = new Spacer();
        panel4.add(spacer32, cc.xy(13, 1));
        final Spacer spacer33 = new Spacer();
        panel4.add(spacer33, cc.xy(1, 2));
        final Spacer spacer34 = new Spacer();
        panel4.add(spacer34, cc.xy(1, 3));
        final Spacer spacer35 = new Spacer();
        panel4.add(spacer35, cc.xy(1, 4));
        final Spacer spacer36 = new Spacer();
        panel4.add(spacer36, cc.xy(1, 5));
        final Spacer spacer37 = new Spacer();
        panel4.add(spacer37, cc.xy(1, 6));
        final Spacer spacer38 = new Spacer();
        panel4.add(spacer38, cc.xy(1, 7));
        final Spacer spacer39 = new Spacer();
        panel4.add(spacer39, cc.xy(1, 8));
        final Spacer spacer40 = new Spacer();
        panel4.add(spacer40, cc.xy(1, 9));
        final Spacer spacer41 = new Spacer();
        panel4.add(spacer41, cc.xy(1, 10));
        final Spacer spacer42 = new Spacer();
        panel4.add(spacer42, cc.xy(1, 11));
        final Spacer spacer43 = new Spacer();
        panel4.add(spacer43, cc.xy(1, 12));
        final Spacer spacer44 = new Spacer();
        panel4.add(spacer44, cc.xy(1, 13));
        final Spacer spacer45 = new Spacer();
        panel4.add(spacer45, cc.xy(1, 14));
        final Spacer spacer46 = new Spacer();
        panel4.add(spacer46, cc.xy(1, 15));
        final Spacer spacer47 = new Spacer();
        panel4.add(spacer47, cc.xy(1, 16));
        final Spacer spacer48 = new Spacer();
        panel4.add(spacer48, cc.xy(1, 17));
        final Spacer spacer49 = new Spacer();
        panel4.add(spacer49, cc.xy(1, 18));
        final Spacer spacer50 = new Spacer();
        panel4.add(spacer50, cc.xy(1, 19));
        final Spacer spacer51 = new Spacer();
        panel4.add(spacer51, cc.xy(1, 20));
        final Spacer spacer52 = new Spacer();
        panel4.add(spacer52, cc.xy(1, 21));
        final Spacer spacer53 = new Spacer();
        panel4.add(spacer53, cc.xy(1, 22));
        final Spacer spacer54 = new Spacer();
        panel4.add(spacer54, cc.xy(1, 23));
        final Spacer spacer55 = new Spacer();
        panel4.add(spacer55, cc.xy(1, 24));
        final Spacer spacer56 = new Spacer();
        panel4.add(spacer56, cc.xy(1, 25));
        final Spacer spacer57 = new Spacer();
        panel4.add(spacer57, cc.xy(1, 26));
        final Spacer spacer58 = new Spacer();
        panel4.add(spacer58, cc.xy(1, 27));
        final Spacer spacer59 = new Spacer();
        panel4.add(spacer59, cc.xy(1, 28));
        final Spacer spacer60 = new Spacer();
        panel4.add(spacer60, cc.xy(1, 29));
        final Spacer spacer61 = new Spacer();
        panel4.add(spacer61, cc.xy(1, 30));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:3px:noGrow,fill:d:grow,center:2px:noGrow"));
        panel7.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.state", panel7);
        final JScrollPane scrollPane3 = new JScrollPane();
        scrollPane3.setHorizontalScrollBarPolicy(31);
        panel7.add(scrollPane3, cc.xy(2, 2, CellConstraints.FILL, CellConstraints.FILL));
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow", "center:d:noGrow"));
        panel8.setName("statesPanel");
        scrollPane3.setViewportView(panel8);
        final Spacer spacer62 = new Spacer();
        panel8.add(spacer62, cc.xy(1, 1));
        final Spacer spacer63 = new Spacer();
        panel8.add(spacer63, cc.xy(2, 1));
        final Spacer spacer64 = new Spacer();
        panel8.add(spacer64, cc.xy(3, 1));
        final Spacer spacer65 = new Spacer();
        panel8.add(spacer65, cc.xy(4, 1));
        final Spacer spacer66 = new Spacer();
        panel8.add(spacer66, cc.xy(5, 1));
        final Spacer spacer67 = new Spacer();
        panel8.add(spacer67, cc.xy(6, 1));
        final Spacer spacer68 = new Spacer();
        panel7.add(spacer68, cc.xy(1, 1));
        final Spacer spacer69 = new Spacer();
        panel7.add(spacer69, cc.xy(2, 1));
        final Spacer spacer70 = new Spacer();
        panel7.add(spacer70, cc.xy(3, 1));
        final Spacer spacer71 = new Spacer();
        panel7.add(spacer71, cc.xy(1, 2));
        final Spacer spacer72 = new Spacer();
        panel7.add(spacer72, cc.xy(1, 3));
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:2px:noGrow,center:d:grow,center:2px:noGrow,center:d:noGrow,center:3px:noGrow"));
        panel9.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.speech", panel9);
        final JScrollPane scrollPane4 = new JScrollPane();
        scrollPane4.setHorizontalScrollBarPolicy(31);
        panel9.add(scrollPane4, cc.xy(2, 2, CellConstraints.FILL, CellConstraints.FILL));
        final JTable table1 = new JTable();
        table1.setName("speechTable");
        scrollPane4.setViewportView(table1);
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow"));
        panel9.add(panel10, cc.xy(2, 4));
        final JButton button5 = new JButton();
        button5.setActionCommand("Clear All");
        button5.setName("speechClearAllButton");
        button5.setText("Button.clearall");
        panel10.add(button5, cc.xy(1, 1));
        final Spacer spacer73 = new Spacer();
        panel9.add(spacer73, cc.xy(1, 1));
        final Spacer spacer74 = new Spacer();
        panel9.add(spacer74, cc.xy(2, 1));
        final Spacer spacer75 = new Spacer();
        panel9.add(spacer75, cc.xy(3, 1));
        final Spacer spacer76 = new Spacer();
        panel9.add(spacer76, cc.xy(1, 2));
        final Spacer spacer77 = new Spacer();
        panel9.add(spacer77, cc.xy(1, 3));
        final Spacer spacer78 = new Spacer();
        panel9.add(spacer78, cc.xy(1, 4));
        final Spacer spacer79 = new Spacer();
        panel9.add(spacer79, cc.xy(1, 5));
        final JPanel panel11 = new JPanel();
        panel11.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:2px:noGrow,center:d:noGrow,center:d:grow,center:2px:noGrow"));
        panel11.setName("ownershipPanel");
        panel11.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.ownership", panel11);
        final JCheckBox checkBox5 = new JCheckBox();
        checkBox5.setActionCommand("All Players");
        checkBox5.setName("@ownedByAll");
        checkBox5.setText("EditTokenDialog.label.allplayers");
        panel11.add(checkBox5, cc.xy(2, 2));
        final JLabel label13 = new JLabel();
        label13.setName("ownershipList");
        label13.setText("");
        panel11.add(label13, cc.xy(2, 3, CellConstraints.FILL, CellConstraints.FILL));
        final Spacer spacer80 = new Spacer();
        panel11.add(spacer80, cc.xy(1, 1));
        final Spacer spacer81 = new Spacer();
        panel11.add(spacer81, cc.xy(2, 1));
        final Spacer spacer82 = new Spacer();
        panel11.add(spacer82, cc.xy(3, 1));
        final Spacer spacer83 = new Spacer();
        panel11.add(spacer83, cc.xy(1, 2));
        final Spacer spacer84 = new Spacer();
        panel11.add(spacer84, cc.xy(1, 3));
        final Spacer spacer85 = new Spacer();
        panel11.add(spacer85, cc.xy(1, 4));
        final JPanel panel12 = new JPanel();
        panel12.setLayout(new FormLayout("fill:d:grow", "center:d:noGrow,center:d:noGrow,center:2px:noGrow"));
        panel12.setVisible(true);
        tabbedPane1.addTab("EditTokenDialog.tab.config", panel12);
        final JPanel panel13 = new JPanel();
        panel13.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:p:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:60dlu:noGrow,left:5dlu:noGrow,fill:d:noGrow,fill:5dlu:noGrow,center:d:noGrow,fill:d:noGrow", "center:2px:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow"));
        ((FormLayout) panel13.getLayout()).setColumnGroups(new int[][]{new int[]{16}});
        panel12.add(panel13, cc.xy(1, 1));
        final JLabel label14 = new JLabel();
        label14.setText("EditTokenDialog.label.shape");
        panel13.add(label14, cc.xy(2, 2));
        final JLabel label15 = new JLabel();
        label15.setText("EditTokenDialog.label.size");
        panel13.add(label15, cc.xy(2, 4));
        final JLabel label16 = new JLabel();
        label16.setText("EditTokenDialog.label.properties");
        panel13.add(label16, cc.xy(2, 6));
        final JComboBox comboBox2 = new JComboBox();
        comboBox2.setActionCommand("comboBoxChanged");
        comboBox2.setName("shape");
        panel13.add(comboBox2, cc.xyw(4, 2, 3));
        final JComboBox comboBox3 = new JComboBox();
        comboBox3.setActionCommand("comboBoxChanged");
        comboBox3.setName("size");
        panel13.add(comboBox3, cc.xyw(4, 4, 3));
        final JComboBox comboBox4 = new JComboBox();
        comboBox4.setActionCommand("comboBoxChanged");
        comboBox4.setName("propertyTypeCombo");
        panel13.add(comboBox4, cc.xyw(4, 6, 3));
        final JLabel label17 = new JLabel();
        label17.setText("EditTokenDialog.label.sight.has");
        panel13.add(label17, cc.xy(2, 8));
        final JCheckBox checkBox6 = new JCheckBox();
        checkBox6.setName("@hasSight");
        checkBox6.setText("");
        panel13.add(checkBox6, cc.xy(4, 8));
        final JComboBox comboBox5 = new JComboBox();
        comboBox5.setActionCommand("comboBoxChanged");
        comboBox5.setName("sightTypeCombo");
        panel13.add(comboBox5, cc.xy(6, 8));
        final JLabel label18 = new JLabel();
        label18.setText("EditTokenDialog.label.image");
        panel13.add(label18, cc.xy(2, 10));
        final JCheckBox checkBox7 = new JCheckBox();
        checkBox7.setName("@hasImageTable");
        checkBox7.setText("");
        panel13.add(checkBox7, cc.xy(4, 10));
        final JComboBox comboBox6 = new JComboBox();
        comboBox6.setActionCommand("comboBoxChanged");
        comboBox6.setName("imageTableCombo");
        panel13.add(comboBox6, cc.xy(6, 10));
        final JLabel label19 = new JLabel();
        label19.setText("EditTokenDialog.label.snaptogrid");
        panel13.add(label19, cc.xy(8, 2));
        final JCheckBox checkBox8 = new JCheckBox();
        checkBox8.setName("@snapToGrid");
        checkBox8.setText("");
        panel13.add(checkBox8, cc.xy(10, 2));
        final JLabel label20 = new JLabel();
        label20.setName("visibleLabel");
        label20.setText("EditTokenDialog.label.visible");
        panel13.add(label20, cc.xy(12, 2));
        final JCheckBox checkBox9 = new JCheckBox();
        checkBox9.setName("@visible");
        checkBox9.setText("");
        panel13.add(checkBox9, cc.xy(14, 2));
        final JLabel label21 = new JLabel();
        label21.setName("visibleOnlyToOwnerLabel");
        label21.setText("EditTokenDialog.label.visible.owner");
        panel13.add(label21, cc.xy(8, 4));
        final JCheckBox checkBox10 = new JCheckBox();
        checkBox10.setName("@visibleOnlyToOwner");
        checkBox10.setText("");
        panel13.add(checkBox10, cc.xy(10, 4));
        final JLabel label22 = new JLabel();
        label22.setName("terrainModifierLabel");
        label22.setText("EditTokenDialog.label.terrain.mod");
        label22.setToolTipText("EditTokenDialog.label.terrain.mod.tooltip");
        panel13.add(label22, cc.xy(12, 4));
        final JComboBox comboBox7 = new JComboBox();
        comboBox7.setActionCommand("comboBoxChanged");
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Token.TerrainModifierOperation.MULTIPLY");
        comboBox7.setModel(defaultComboBoxModel1);
        comboBox7.setName("terrainModifierOperation");
        comboBox7.setToolTipText("EditTokenDialog.combo.terrain.mod");
        panel13.add(comboBox7, cc.xy(14, 4));
        final JTextField textField1 = new JTextField();
        textField1.setColumns(4);
        textField1.setName("terrainModifier");
        textField1.setText("");
        textField1.setToolTipText("EditTokenDialog.label.terrain.mod.tooltip");
        panel13.add(textField1, cc.xy(15, 4));
        final JLabel label23 = new JLabel();
        label23.setName("tokenOpacityLabel");
        label23.setText("EditTokenDialog.label.opacity");
        label23.setToolTipText("EditTokenDialog.label.opacity.tooltip");
        panel13.add(label23, cc.xy(8, 6));
        final JSlider slider1 = new JSlider();
        slider1.setMajorTickSpacing(20);
        slider1.setMinimum(5);
        slider1.setMinorTickSpacing(5);
        slider1.setName("tokenOpacitySlider");
        slider1.setOrientation(1);
        slider1.setPaintTicks(true);
        slider1.setSnapToTicks(true);
        slider1.setValue(100);
        slider1.setValueIsAdjusting(true);
        panel13.add(slider1, cc.xywh(9, 6, 1, 5));
        final JLabel label24 = new JLabel();
        label24.setName("tokenOpacityValueLabel");
        label24.setText("EditTokenDialog.label.opacity.100");
        panel13.add(label24, cc.xy(10, 6));
        final JLabel label25 = new JLabel();
        label25.setName("ignoreTerrainModifierLabel");
        label25.setText("EditTokenDialog.label.terrain.ignore");
        label25.setToolTipText("EditTokenDialog.label.terrain.ignore.tooltip");
        panel13.add(label25, cc.xy(12, 6));
        final JScrollPane scrollPane5 = new JScrollPane();
        panel13.add(scrollPane5, cc.xywh(14, 6, 1, 5));
        final JList list1 = new JList();
        list1.setName("terrainModifiersIgnored");
        list1.setToolTipText("EditTokenDialog.label.terrain.ignore.tooltip");
        list1.setVisibleRowCount(0);
        scrollPane5.setViewportView(list1);
        final Spacer spacer86 = new Spacer();
        panel13.add(spacer86, cc.xy(1, 1));
        final Spacer spacer87 = new Spacer();
        panel13.add(spacer87, cc.xy(2, 1));
        final Spacer spacer88 = new Spacer();
        panel13.add(spacer88, cc.xy(3, 1));
        final Spacer spacer89 = new Spacer();
        panel13.add(spacer89, cc.xy(4, 1));
        final Spacer spacer90 = new Spacer();
        panel13.add(spacer90, cc.xy(5, 1));
        final Spacer spacer91 = new Spacer();
        panel13.add(spacer91, cc.xy(6, 1));
        final Spacer spacer92 = new Spacer();
        panel13.add(spacer92, cc.xy(7, 1));
        final Spacer spacer93 = new Spacer();
        panel13.add(spacer93, cc.xy(8, 1));
        final Spacer spacer94 = new Spacer();
        panel13.add(spacer94, cc.xy(9, 1));
        final Spacer spacer95 = new Spacer();
        panel13.add(spacer95, cc.xy(10, 1));
        final Spacer spacer96 = new Spacer();
        panel13.add(spacer96, cc.xy(11, 1));
        final Spacer spacer97 = new Spacer();
        panel13.add(spacer97, cc.xy(12, 1));
        final Spacer spacer98 = new Spacer();
        panel13.add(spacer98, cc.xy(13, 1));
        final Spacer spacer99 = new Spacer();
        panel13.add(spacer99, cc.xy(14, 1));
        final Spacer spacer100 = new Spacer();
        panel13.add(spacer100, cc.xy(15, 1));
        final Spacer spacer101 = new Spacer();
        panel13.add(spacer101, cc.xy(16, 1));
        final Spacer spacer102 = new Spacer();
        panel13.add(spacer102, cc.xy(17, 1));
        final Spacer spacer103 = new Spacer();
        panel13.add(spacer103, cc.xy(18, 1));
        final Spacer spacer104 = new Spacer();
        panel13.add(spacer104, cc.xy(19, 1));
        final Spacer spacer105 = new Spacer();
        panel13.add(spacer105, cc.xy(20, 1));
        final Spacer spacer106 = new Spacer();
        panel13.add(spacer106, cc.xy(1, 2));
        final Spacer spacer107 = new Spacer();
        panel13.add(spacer107, cc.xy(1, 3));
        final Spacer spacer108 = new Spacer();
        panel13.add(spacer108, cc.xy(1, 4));
        final Spacer spacer109 = new Spacer();
        panel13.add(spacer109, cc.xy(1, 5));
        final Spacer spacer110 = new Spacer();
        panel13.add(spacer110, cc.xy(1, 6));
        final Spacer spacer111 = new Spacer();
        panel13.add(spacer111, cc.xy(1, 7));
        final Spacer spacer112 = new Spacer();
        panel13.add(spacer112, cc.xy(1, 8));
        final Spacer spacer113 = new Spacer();
        panel13.add(spacer113, cc.xy(1, 9));
        final Spacer spacer114 = new Spacer();
        panel13.add(spacer114, cc.xy(1, 10));
        final Spacer spacer115 = new Spacer();
        panel13.add(spacer115, cc.xy(3, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer116 = new Spacer();
        panel13.add(spacer116, cc.xy(3, 4, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer117 = new Spacer();
        panel13.add(spacer117, cc.xy(3, 6, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer118 = new Spacer();
        panel13.add(spacer118, cc.xy(3, 8, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer119 = new Spacer();
        panel13.add(spacer119, cc.xy(3, 10, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer120 = new Spacer();
        panel13.add(spacer120, cc.xy(5, 8, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer121 = new Spacer();
        panel13.add(spacer121, cc.xy(5, 10, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer122 = new Spacer();
        panel13.add(spacer122, cc.xy(9, 4, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer123 = new Spacer();
        panel13.add(spacer123, cc.xy(9, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer124 = new Spacer();
        panel13.add(spacer124, cc.xy(11, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer125 = new Spacer();
        panel13.add(spacer125, cc.xy(13, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer126 = new Spacer();
        panel13.add(spacer126, cc.xy(13, 4, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer127 = new Spacer();
        panel13.add(spacer127, cc.xy(13, 6, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer128 = new Spacer();
        panel13.add(spacer128, cc.xy(11, 4, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer129 = new Spacer();
        panel13.add(spacer129, cc.xy(11, 6, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel14 = new JPanel();
        panel14.setLayout(new FormLayout("fill:d:noGrow,fill:d:grow,fill:d:noGrow,fill:d:grow,fill:d:noGrow,fill:d:noGrow", "center:d:noGrow"));
        panel12.add(panel14, cc.xy(1, 2));
        final JPanel panel15 = new JPanel();
        panel15.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow"));
        panel15.setName("charsheetPanel");
        panel14.add(panel15, cc.xy(5, 1));
        panel15.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "EditTokenDialog.border.title.handout", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel15.getFont()), new Color(-13538620)));
        final JLabel label26 = new JLabel();
        label26.setName("charsheet");
        label26.setText("EditTokenDialog.border.title.charsheet");
        panel15.add(label26, cc.xy(1, 1));
        final JPanel panel16 = new JPanel();
        panel16.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow"));
        panel16.setName("tokenLayoutPanel");
        panel14.add(panel16, cc.xy(1, 1));
        panel16.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "EditTokenDialog.border.title.layout", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel16.getFont()), new Color(-13538620)));
        final JLabel label27 = new JLabel();
        label27.setName("tokenLayout");
        label27.setText("EditTokenDialog.border.title.layout");
        panel16.add(label27, cc.xy(1, 1));
        final JPanel panel17 = new JPanel();
        panel17.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow"));
        panel17.setName("portraitPanel");
        panel14.add(panel17, cc.xy(3, 1));
        panel17.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "EditTokenDialog.border.title.portrait", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Dialog", Font.BOLD, 12, panel17.getFont()), new Color(-13538620)));
        final JLabel label28 = new JLabel();
        label28.setName("portrait");
        label28.setText("EditTokenDialog.border.title.portrait");
        panel17.add(label28, cc.xy(1, 1));
        final Spacer spacer130 = new Spacer();
        panel14.add(spacer130, cc.xy(1, 1));
        final Spacer spacer131 = new Spacer();
        panel14.add(spacer131, cc.xy(2, 1));
        final Spacer spacer132 = new Spacer();
        panel14.add(spacer132, cc.xy(3, 1));
        final Spacer spacer133 = new Spacer();
        panel14.add(spacer133, cc.xy(4, 1));
        final Spacer spacer134 = new Spacer();
        panel14.add(spacer134, cc.xy(5, 1));
        final Spacer spacer135 = new Spacer();
        panel14.add(spacer135, cc.xy(6, 1));
        final Spacer spacer136 = new Spacer();
        panel12.add(spacer136, cc.xy(1, 1));
        final Spacer spacer137 = new Spacer();
        panel12.add(spacer137, cc.xy(1, 2));
        final Spacer spacer138 = new Spacer();
        panel12.add(spacer138, cc.xy(1, 3));
        final JPanel panel18 = new JPanel();
        panel18.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:noGrow", "center:d:noGrow,center:d:noGrow,center:d:noGrow"));
        panel18.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.libToken", panel18);
        final JLabel label29 = new JLabel();
        label29.setText("Label.allowURIAccess");
        panel18.add(label29, cc.xy(1, 1));
        final JLabel label30 = new JLabel();
        label30.setName("Label.LibURIError");
        label30.setText("");
        panel18.add(label30, cc.xyw(1, 3, 67));
        final JCheckBox checkBox11 = new JCheckBox();
        checkBox11.setName("@allowURIAccess");
        checkBox11.setText("");
        panel18.add(checkBox11, cc.xy(3, 1));
        final Spacer spacer139 = new Spacer();
        panel18.add(spacer139, cc.xy(2, 1));
        final Spacer spacer140 = new Spacer();
        panel18.add(spacer140, cc.xy(4, 1));
        final Spacer spacer141 = new Spacer();
        panel18.add(spacer141, cc.xy(5, 1));
        final Spacer spacer142 = new Spacer();
        panel18.add(spacer142, cc.xy(6, 1));
        final Spacer spacer143 = new Spacer();
        panel18.add(spacer143, cc.xy(7, 1));
        final Spacer spacer144 = new Spacer();
        panel18.add(spacer144, cc.xy(8, 1));
        final Spacer spacer145 = new Spacer();
        panel18.add(spacer145, cc.xy(9, 1));
        final Spacer spacer146 = new Spacer();
        panel18.add(spacer146, cc.xy(10, 1));
        final Spacer spacer147 = new Spacer();
        panel18.add(spacer147, cc.xy(11, 1));
        final Spacer spacer148 = new Spacer();
        panel18.add(spacer148, cc.xy(12, 1));
        final Spacer spacer149 = new Spacer();
        panel18.add(spacer149, cc.xy(13, 1));
        final Spacer spacer150 = new Spacer();
        panel18.add(spacer150, cc.xy(14, 1));
        final Spacer spacer151 = new Spacer();
        panel18.add(spacer151, cc.xy(15, 1));
        final Spacer spacer152 = new Spacer();
        panel18.add(spacer152, cc.xy(16, 1));
        final Spacer spacer153 = new Spacer();
        panel18.add(spacer153, cc.xy(17, 1));
        final Spacer spacer154 = new Spacer();
        panel18.add(spacer154, cc.xy(18, 1));
        final Spacer spacer155 = new Spacer();
        panel18.add(spacer155, cc.xy(19, 1));
        final Spacer spacer156 = new Spacer();
        panel18.add(spacer156, cc.xy(20, 1));
        final Spacer spacer157 = new Spacer();
        panel18.add(spacer157, cc.xy(21, 1));
        final Spacer spacer158 = new Spacer();
        panel18.add(spacer158, cc.xy(22, 1));
        final Spacer spacer159 = new Spacer();
        panel18.add(spacer159, cc.xy(23, 1));
        final Spacer spacer160 = new Spacer();
        panel18.add(spacer160, cc.xy(24, 1));
        final Spacer spacer161 = new Spacer();
        panel18.add(spacer161, cc.xy(25, 1));
        final Spacer spacer162 = new Spacer();
        panel18.add(spacer162, cc.xy(26, 1));
        final Spacer spacer163 = new Spacer();
        panel18.add(spacer163, cc.xy(27, 1));
        final Spacer spacer164 = new Spacer();
        panel18.add(spacer164, cc.xy(28, 1));
        final Spacer spacer165 = new Spacer();
        panel18.add(spacer165, cc.xy(29, 1));
        final Spacer spacer166 = new Spacer();
        panel18.add(spacer166, cc.xy(30, 1));
        final Spacer spacer167 = new Spacer();
        panel18.add(spacer167, cc.xy(31, 1));
        final Spacer spacer168 = new Spacer();
        panel18.add(spacer168, cc.xy(32, 1));
        final Spacer spacer169 = new Spacer();
        panel18.add(spacer169, cc.xy(33, 1));
        final Spacer spacer170 = new Spacer();
        panel18.add(spacer170, cc.xy(34, 1));
        final Spacer spacer171 = new Spacer();
        panel18.add(spacer171, cc.xy(35, 1));
        final Spacer spacer172 = new Spacer();
        panel18.add(spacer172, cc.xy(36, 1));
        final Spacer spacer173 = new Spacer();
        panel18.add(spacer173, cc.xy(37, 1));
        final Spacer spacer174 = new Spacer();
        panel18.add(spacer174, cc.xy(38, 1));
        final Spacer spacer175 = new Spacer();
        panel18.add(spacer175, cc.xy(39, 1));
        final Spacer spacer176 = new Spacer();
        panel18.add(spacer176, cc.xy(40, 1));
        final Spacer spacer177 = new Spacer();
        panel18.add(spacer177, cc.xy(41, 1));
        final Spacer spacer178 = new Spacer();
        panel18.add(spacer178, cc.xy(42, 1));
        final Spacer spacer179 = new Spacer();
        panel18.add(spacer179, cc.xy(43, 1));
        final Spacer spacer180 = new Spacer();
        panel18.add(spacer180, cc.xy(44, 1));
        final Spacer spacer181 = new Spacer();
        panel18.add(spacer181, cc.xy(45, 1));
        final Spacer spacer182 = new Spacer();
        panel18.add(spacer182, cc.xy(46, 1));
        final Spacer spacer183 = new Spacer();
        panel18.add(spacer183, cc.xy(47, 1));
        final Spacer spacer184 = new Spacer();
        panel18.add(spacer184, cc.xy(48, 1));
        final Spacer spacer185 = new Spacer();
        panel18.add(spacer185, cc.xy(49, 1));
        final Spacer spacer186 = new Spacer();
        panel18.add(spacer186, cc.xy(50, 1));
        final Spacer spacer187 = new Spacer();
        panel18.add(spacer187, cc.xy(51, 1));
        final Spacer spacer188 = new Spacer();
        panel18.add(spacer188, cc.xy(52, 1));
        final Spacer spacer189 = new Spacer();
        panel18.add(spacer189, cc.xy(53, 1));
        final Spacer spacer190 = new Spacer();
        panel18.add(spacer190, cc.xy(54, 1));
        final Spacer spacer191 = new Spacer();
        panel18.add(spacer191, cc.xy(55, 1));
        final Spacer spacer192 = new Spacer();
        panel18.add(spacer192, cc.xy(56, 1));
        final Spacer spacer193 = new Spacer();
        panel18.add(spacer193, cc.xy(57, 1));
        final Spacer spacer194 = new Spacer();
        panel18.add(spacer194, cc.xy(58, 1));
        final Spacer spacer195 = new Spacer();
        panel18.add(spacer195, cc.xy(59, 1));
        final Spacer spacer196 = new Spacer();
        panel18.add(spacer196, cc.xy(60, 1));
        final Spacer spacer197 = new Spacer();
        panel18.add(spacer197, cc.xy(61, 1));
        final Spacer spacer198 = new Spacer();
        panel18.add(spacer198, cc.xy(62, 1));
        final Spacer spacer199 = new Spacer();
        panel18.add(spacer199, cc.xy(63, 1));
        final Spacer spacer200 = new Spacer();
        panel18.add(spacer200, cc.xy(64, 1));
        final Spacer spacer201 = new Spacer();
        panel18.add(spacer201, cc.xy(65, 1));
        final Spacer spacer202 = new Spacer();
        panel18.add(spacer202, cc.xy(66, 1));
        final Spacer spacer203 = new Spacer();
        panel18.add(spacer203, cc.xy(67, 1));
        final Spacer spacer204 = new Spacer();
        panel18.add(spacer204, cc.xy(1, 2));
        final JPanel panel19 = new JPanel();
        panel19.setLayout(new FormLayout("fill:d:noGrow,left:d:noGrow,fill:5dlu:noGrow,left:d:grow,fill:d:noGrow,center:d:noGrow,fill:d:noGrow", "center:2px:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,bottom:d:noGrow,center:2px:noGrow,fill:d:grow,center:3px:noGrow"));
        panel19.setVisible(false);
        tabbedPane1.addTab("EditTokenDialog.tab.hero", panel19);
        final JLabel label31 = new JLabel();
        label31.setName("summaryLabel");
        label31.setText("EditTokenDialog.label.hero.summary");
        panel19.add(label31, cc.xy(2, 2));
        final JTabbedPane tabbedPane2 = new JTabbedPane();
        tabbedPane2.setName("StatblockTabPane");
        tabbedPane2.setToolTipText("View the statblocks from Hero Lab");
        panel19.add(tabbedPane2, cc.xyw(2, 8, 5));
        final JPanel panel20 = new JPanel();
        panel20.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        tabbedPane2.addTab("EditTokenDialog.tab.hero.html", panel20);
        final JScrollPane scrollPane6 = new JScrollPane();
        panel20.add(scrollPane6, cc.xy(1, 1, CellConstraints.FILL, CellConstraints.FILL));
        final JEditorPane editorPane1 = new JEditorPane();
        editorPane1.setContentType("text/plain");
        editorPane1.setEditable(false);
        editorPane1.setName("HTMLstatblockTextArea");
        editorPane1.setText("");
        scrollPane6.setViewportView(editorPane1);
        final JPanel panel21 = new JPanel();
        panel21.setLayout(new FormLayout("fill:5dlu:noGrow,fill:d:noGrow,fill:d:grow,fill:5dlu:noGrow,fill:d:noGrow,fill:5dlu:noGrow", "fill:d:grow,center:3dlu:noGrow,center:d:noGrow,center:3dlu:noGrow"));
        panel21.setName("xmlStatblockPanel");
        panel21.setVisible(false);
        tabbedPane2.addTab("EditTokenDialog.tab.hero.xml", panel21);
        final JLabel label32 = new JLabel();
        label32.setName("expressionLabel");
        label32.setText("EditTokenDialog.label.hero.statBlockSearch");
        panel21.add(label32, cc.xy(2, 3));
        final JTextField textField2 = new JTextField();
        textField2.setName("xmlStatblockSearchTextField");
        textField2.setText("");
        textField2.setToolTipText("EditTokenDialog.label.hero.statBlockSearch.tooltip");
        panel21.add(textField2, cc.xy(3, 3));
        final JButton button6 = new JButton();
        button6.setActionCommand("Find");
        button6.setName("xmlStatblockSearchButton");
        button6.setText("EditTokenDialog.action.hero.statBlockRTextScroll");
        button6.setToolTipText("EditTokenDialog.button.hero.statBlockSearch.tooltip");
        panel21.add(button6, cc.xy(5, 3));
        final JLabel label33 = new JLabel();
        label33.setName("xmlStatblockRTextScrollPane");
        label33.setText("");
        panel21.add(label33, cc.xyw(2, 1, 4));
        final Spacer spacer205 = new Spacer();
        panel21.add(spacer205, cc.xy(1, 1));
        final Spacer spacer206 = new Spacer();
        panel21.add(spacer206, cc.xy(3, 1));
        final Spacer spacer207 = new Spacer();
        panel21.add(spacer207, cc.xy(4, 1));
        final Spacer spacer208 = new Spacer();
        panel21.add(spacer208, cc.xy(5, 1));
        final Spacer spacer209 = new Spacer();
        panel21.add(spacer209, cc.xy(6, 1));
        final Spacer spacer210 = new Spacer();
        panel21.add(spacer210, cc.xy(1, 2));
        final Spacer spacer211 = new Spacer();
        panel21.add(spacer211, cc.xy(1, 3));
        final Spacer spacer212 = new Spacer();
        panel21.add(spacer212, cc.xy(1, 4));
        final JPanel panel22 = new JPanel();
        panel22.setLayout(new FormLayout("fill:5dlu:noGrow,fill:d:noGrow,fill:d:grow,fill:5dlu:noGrow,fill:d:noGrow,fill:5dlu:noGrow", "fill:d:grow,center:3dlu:noGrow,center:d:noGrow,center:3dlu:noGrow"));
        panel22.setName("textStatblockPanel");
        panel22.setVisible(false);
        tabbedPane2.addTab("EditTokenDialog.tab.hero.text", panel22);
        final JButton button7 = new JButton();
        button7.setActionCommand("Find");
        button7.setName("textStatblockSearchButton");
        button7.setText("EditTokenDialog.action.hero.statBlockRTextScroll");
        button7.setToolTipText("EditTokenDialog.button.hero.statBlockSearch.tooltip");
        panel22.add(button7, cc.xy(5, 3));
        final JLabel label34 = new JLabel();
        label34.setName("expressionLabel");
        label34.setText("EditTokenDialog.label.hero.statBlockSearch");
        panel22.add(label34, cc.xy(2, 3));
        final JTextField textField3 = new JTextField();
        textField3.setName("textStatblockSearchTextField");
        textField3.setText("");
        textField3.setToolTipText("EditTokenDialog.label.hero.statBlockSearch.tooltip");
        panel22.add(textField3, cc.xy(3, 3));
        final JLabel label35 = new JLabel();
        label35.setName("textStatblockRTextScrollPane");
        label35.setText("");
        panel22.add(label35, cc.xyw(2, 1, 4));
        final Spacer spacer213 = new Spacer();
        panel22.add(spacer213, cc.xy(1, 1));
        final Spacer spacer214 = new Spacer();
        panel22.add(spacer214, cc.xy(3, 1));
        final Spacer spacer215 = new Spacer();
        panel22.add(spacer215, cc.xy(4, 1));
        final Spacer spacer216 = new Spacer();
        panel22.add(spacer216, cc.xy(5, 1));
        final Spacer spacer217 = new Spacer();
        panel22.add(spacer217, cc.xy(6, 1));
        final Spacer spacer218 = new Spacer();
        panel22.add(spacer218, cc.xy(1, 2));
        final Spacer spacer219 = new Spacer();
        panel22.add(spacer219, cc.xy(1, 3));
        final Spacer spacer220 = new Spacer();
        panel22.add(spacer220, cc.xy(1, 4));
        final JPanel panel23 = new JPanel();
        panel23.setLayout(new FormLayout("fill:d:noGrow,fill:d:noGrow,fill:d:noGrow,fill:d:grow,fill:d:noGrow", "center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,center:d:noGrow,fill:d:grow,center:d:noGrow"));
        panel23.setVisible(true);
        tabbedPane2.addTab("EditTokenDialog.tab.hero.images", panel23);
        final JButton button8 = new JButton();
        button8.setActionCommand("Set as Token Handout");
        button8.setName("setAsHandoutButton");
        button8.setText("EditTokenDialog.button.hero.setAsTokenHandout");
        panel23.add(button8, cc.xy(2, 7));
        final JScrollPane scrollPane7 = new JScrollPane();
        panel23.add(scrollPane7, cc.xywh(4, 2, 1, 7, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JList list2 = new JList();
        list2.setName("heroLabImagesList");
        scrollPane7.setViewportView(list2);
        final JButton button9 = new JButton();
        button9.setActionCommand("Set as Token Image");
        button9.setName("setAsImageButton");
        button9.setText("EditTokenDialog.button.hero.setAsTokenImage");
        panel23.add(button9, cc.xy(2, 5));
        final JButton button10 = new JButton();
        button10.setActionCommand("Set as Token Portrait");
        button10.setName("setAsPortraitButton");
        button10.setText("EditTokenDialog.button.hero.setAsTokenPortrait");
        panel23.add(button10, cc.xy(2, 3));
        final Spacer spacer221 = new Spacer();
        panel23.add(spacer221, cc.xy(1, 1));
        final Spacer spacer222 = new Spacer();
        panel23.add(spacer222, cc.xy(2, 1));
        final Spacer spacer223 = new Spacer();
        panel23.add(spacer223, cc.xy(3, 1));
        final Spacer spacer224 = new Spacer();
        panel23.add(spacer224, cc.xy(4, 1));
        final Spacer spacer225 = new Spacer();
        panel23.add(spacer225, cc.xy(5, 1));
        final Spacer spacer226 = new Spacer();
        panel23.add(spacer226, cc.xy(1, 2));
        final Spacer spacer227 = new Spacer();
        panel23.add(spacer227, cc.xy(1, 3));
        final Spacer spacer228 = new Spacer();
        panel23.add(spacer228, cc.xy(1, 4));
        final Spacer spacer229 = new Spacer();
        panel23.add(spacer229, cc.xy(1, 5));
        final Spacer spacer230 = new Spacer();
        panel23.add(spacer230, cc.xy(1, 6));
        final Spacer spacer231 = new Spacer();
        panel23.add(spacer231, cc.xy(1, 7));
        final Spacer spacer232 = new Spacer();
        panel23.add(spacer232, cc.xy(1, 8));
        final Spacer spacer233 = new Spacer();
        panel23.add(spacer233, cc.xy(1, 9));
        final JLabel label36 = new JLabel();
        label36.setName("portfolioLabel");
        label36.setText("EditTokenDialog.label.hero.portfolio");
        panel19.add(label36, cc.xy(2, 4));
        final JLabel label37 = new JLabel();
        label37.setName("summaryText");
        label37.setText("");
        panel19.add(label37, cc.xy(4, 2, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label38 = new JLabel();
        label38.setAutoscrolls(true);
        label38.setName("portfolioLocation");
        label38.setText("");
        panel19.add(label38, cc.xy(4, 4, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JLabel label39 = new JLabel();
        label39.setText("EditTokenDialog.label.hero.last");
        panel19.add(label39, cc.xy(2, 6));
        final JLabel label40 = new JLabel();
        label40.setName("lastModified");
        label40.setText("");
        panel19.add(label40, cc.xy(4, 6));
        final JCheckBox checkBox12 = new JCheckBox();
        checkBox12.setActionCommand("Is Ally?");
        checkBox12.setEnabled(false);
        checkBox12.setName("isAllyCheckBox");
        checkBox12.setText("EditTokenDialog.label.hero.isAlly");
        panel19.add(checkBox12, cc.xy(6, 6, CellConstraints.CENTER, CellConstraints.DEFAULT));
        final JButton button11 = new JButton();
        button11.setAlignmentY(0.0f);
        button11.setIconTextGap(2);
        button11.setName("refreshDataButton");
        button11.setText("");
        button11.setToolTipText("EditTokenDialog.button.hero.refresh.tooltip.off");
        panel19.add(button11, cc.xywh(6, 2, 1, 3));
        final Spacer spacer234 = new Spacer();
        panel19.add(spacer234, cc.xy(1, 1));
        final Spacer spacer235 = new Spacer();
        panel19.add(spacer235, cc.xy(2, 1));
        final Spacer spacer236 = new Spacer();
        panel19.add(spacer236, cc.xy(3, 1));
        final Spacer spacer237 = new Spacer();
        panel19.add(spacer237, cc.xy(4, 1));
        final Spacer spacer238 = new Spacer();
        panel19.add(spacer238, cc.xy(5, 1));
        final Spacer spacer239 = new Spacer();
        panel19.add(spacer239, cc.xy(6, 1));
        final Spacer spacer240 = new Spacer();
        panel19.add(spacer240, cc.xy(7, 1));
        final Spacer spacer241 = new Spacer();
        panel19.add(spacer241, cc.xy(1, 2));
        final Spacer spacer242 = new Spacer();
        panel19.add(spacer242, cc.xy(1, 3));
        final Spacer spacer243 = new Spacer();
        panel19.add(spacer243, cc.xy(1, 4));
        final Spacer spacer244 = new Spacer();
        panel19.add(spacer244, cc.xy(1, 5));
        final Spacer spacer245 = new Spacer();
        panel19.add(spacer245, cc.xy(1, 6));
        final Spacer spacer246 = new Spacer();
        panel19.add(spacer246, cc.xy(1, 7));
        final Spacer spacer247 = new Spacer();
        panel19.add(spacer247, cc.xy(1, 8));
        final Spacer spacer248 = new Spacer();
        panel19.add(spacer248, cc.xy(1, 9));
        final JPanel panel24 = new JPanel();
        panel24.setLayout(new FormLayout("fill:d:noGrow,fill:8dlu:noGrow,fill:d:noGrow", "center:d:noGrow"));
        mainPanel.add(panel24, cc.xyw(2, 4, 3, CellConstraints.RIGHT, CellConstraints.DEFAULT));
        final JButton button12 = new JButton();
        button12.setActionCommand("Cancel");
        button12.setName("cancelButton");
        button12.setText("Button.cancel");
        panel24.add(button12, cc.xy(3, 1));
        final JButton button13 = new JButton();
        button13.setActionCommand("OK");
        button13.setName("okButton");
        button13.setText("Button.ok");
        panel24.add(button13, cc.xy(1, 1));
        final Spacer spacer249 = new Spacer();
        panel24.add(spacer249, cc.xy(2, 1));
        final JPanel panel25 = new JPanel();
        panel25.setLayout(new FormLayout("fill:d:noGrow,fill:6dlu:noGrow,fill:339px:noGrow,fill:6dlu:noGrow,fill:d:noGrow", "center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow,center:2px:noGrow,center:d:noGrow"));
        mainPanel.add(panel25, cc.xy(4, 2));
        final JLabel label41 = new JLabel();
        label41.setText("Label.name");
        panel25.add(label41, cc.xy(1, 1));
        final JTextField textField4 = new JTextField();
        textField4.setColumns(30);
        Font textField4Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, textField4.getFont());
        if (textField4Font != null) textField4.setFont(textField4Font);
        textField4.setName("@name");
        textField4.setText("");
        panel25.add(textField4, cc.xy(3, 1));
        final JLabel label42 = new JLabel();
        label42.setName("tokenGMNameLabel");
        label42.setText("Label.gmname");
        panel25.add(label42, cc.xy(1, 3));
        final JTextField textField5 = new JTextField();
        textField5.setColumns(30);
        Font textField5Font = this.$$$getFont$$$("SansSerif", Font.BOLD, -1, textField5.getFont());
        if (textField5Font != null) textField5.setFont(textField5Font);
        textField5.setName("@GMName");
        textField5.setText("");
        panel25.add(textField5, cc.xy(3, 3));
        final JComboBox comboBox8 = new JComboBox();
        comboBox8.setActionCommand("comboBoxChanged");
        comboBox8.setName("type");
        panel25.add(comboBox8, cc.xy(5, 1));
        final JLabel label43 = new JLabel();
        label43.setText("EditTokenDialog.label.label");
        panel25.add(label43, cc.xy(1, 5));
        final JTextField textField6 = new JTextField();
        textField6.setName("@label");
        textField6.setText("");
        panel25.add(textField6, cc.xy(3, 5));
        final JLabel label44 = new JLabel();
        label44.setText("Label.speechName");
        panel25.add(label44, cc.xy(1, 7));
        final JTextField textField7 = new JTextField();
        textField7.setName("@speechName");
        textField7.setText("");
        panel25.add(textField7, cc.xy(3, 7));
        final Spacer spacer250 = new Spacer();
        panel25.add(spacer250, cc.xy(2, 1));
        final Spacer spacer251 = new Spacer();
        panel25.add(spacer251, cc.xy(4, 1));
        final Spacer spacer252 = new Spacer();
        panel25.add(spacer252, cc.xy(1, 2));
        final Spacer spacer253 = new Spacer();
        panel25.add(spacer253, cc.xy(1, 4));
        final Spacer spacer254 = new Spacer();
        panel25.add(spacer254, cc.xy(1, 6));
        final Spacer spacer255 = new Spacer();
        panel25.add(spacer255, cc.xy(2, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer256 = new Spacer();
        panel25.add(spacer256, cc.xy(2, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer257 = new Spacer();
        panel25.add(spacer257, cc.xy(2, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer258 = new Spacer();
        mainPanel.add(spacer258, cc.xy(1, 1));
        final Spacer spacer259 = new Spacer();
        mainPanel.add(spacer259, cc.xy(2, 1));
        final Spacer spacer260 = new Spacer();
        mainPanel.add(spacer260, cc.xy(4, 1));
        final Spacer spacer261 = new Spacer();
        mainPanel.add(spacer261, cc.xy(5, 1));
        final Spacer spacer262 = new Spacer();
        mainPanel.add(spacer262, cc.xy(1, 2));
        final Spacer spacer263 = new Spacer();
        mainPanel.add(spacer263, cc.xy(1, 3));
        final Spacer spacer264 = new Spacer();
        mainPanel.add(spacer264, cc.xy(1, 4));
        final Spacer spacer265 = new Spacer();
        mainPanel.add(spacer265, cc.xy(3, 2));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
